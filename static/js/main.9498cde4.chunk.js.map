{"version":3,"sources":["store/storeApi.js","components/List/Title.jsx","components/List/Card/Card.jsx","components/Input/InputCard.jsx","components/Input/InputContainer.jsx","components/List/List.jsx","store/store.js","App.js","reportWebVitals.js","index.js"],"names":["React","createContext","useStyle","makeStyles","theme","editableTitleContainer","display","margin","spacing","padding","editableTitle","flexGrow","fontSize","input","background","Title","title","listId","useState","open","setOpen","newTitle","setNewTitle","updateListTitle","useContext","storeApi","classes","InputBase","onChange","e","target","value","autoFocus","inputProps","className","fullWidth","onBlur","Typography","onClick","card","Card","index","draggableId","id","provided","ref","innerRef","dragHandleProps","draggableProps","Paper","paddingBottom","fontWeight","btnConfirm","backgroundColor","color","alpha","boxShadow","confirm","InputCard","type","addMoreCard","addMoreList","setTitle","contenedor","multiline","fullWith","placeholder","Button","IconButton","root","width","marginTop","addCard","InputContainer","Collapse","in","elevation","minWidth","marginLeft","List","list","CssBaseline","droppableId","droppableProps","cards","map","data","lists","listIds","minHeight","overFlowY","App","store","setData","Provider","newCard","uuid","NewState","newListId","newList","newState","onDragEnd","result","destination","source","console","log","newListIds","splice","sourceList","destinationList","draggingCard","filter","direction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9498cde4.chunk.js","sourcesContent":["import React from 'react';\nexport default React.createContext(null);","import React, {useContext, useState} from 'react';\nimport {Typography, InputBase} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport storeApi from '../../store/storeApi';\n\n\nconst useStyle = makeStyles((theme)=>({\n    editableTitleContainer: {\n        display: 'flex',\n        margin: theme.spacing(1),\n        padding: theme.spacing(2,2,2,1 ),\n    },\n    editableTitle: {\n        flexGrow: 1,\n        fontSize:'1.2rem',\n    },\n    input:{\n        fontSize:'1.2rem',\n        margin: theme.spacing(1),\n        \"&:focus\":{\n            background:'white',\n        },\n    },\n}));\n\nconst Title = ( {title, listId} ) => {\n    const [open, setOpen] = useState(false);\n    const [newTitle,setNewTitle] = useState(title);\n    const {updateListTitle} = useContext(storeApi);\n    const classes = useStyle();\n    const handleOnChange =(e)=>{\n        setNewTitle(e.target.value);\n    };\n    const handleOnBlur = ()=>{\n        updateListTitle(newTitle, listId);\n        setOpen(false);\n    }\n\n    return(\n        <div>\n        {open ? (\n            <div>\n                <InputBase \n                    onChange={handleOnChange}\n                    autoFocus\n                    value={newTitle}\n                    inputProps={{\n                        className: classes.input\n                    }}\n                    fullWidth\n                    onBlur={handleOnBlur}/>\n            </div>\n            ) : (\n            <div className={classes.editableTitleContainer}>\n            <Typography\n                onClick={()=> setOpen(!open)}\n                className={classes.editableTitle}>\n                    {title}\n            </Typography> \n            <MoreHorizIcon />       \n        </div>\n    )}\n    </div>  \n    );\n}\n\nexport default Title;\n","import React from 'react';\nimport {Paper} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst useStyle = makeStyles((theme)=>({\n    card: {\n        padding: theme.spacing(1,1,1,2),\n        margin: theme.spacing(1),\n    }\n}));\n\nconst Card = ({card, index}) => {\n    const classes = useStyle();\n    return (\n        <Draggable draggableId={card.id} index={index}>\n            {(provided)=> (\n            <div\n            ref={provided.innerRef}\n            {...provided.dragHandleProps}\n            {...provided.draggableProps}\n            >\n            <Paper className={classes.card}>{card.title}</Paper>\n            </div>\n            )}\n        </Draggable>\n    )\n};\n\nexport default Card;"," import React, { useContext, useState } from 'react';\n import {Paper, InputBase, Button, IconButton } from '@material-ui/core';\n import ClearIcon from '@material-ui/icons/Clear';\n import {makeStyles, alpha} from '@material-ui/core/styles';\nimport storeApi from '../../store/storeApi';\n\n\n const useStyle = makeStyles((theme)=>({\n    card: {\n        padding: theme.spacing(0,1,1,1),\n        paddingBottom: theme.spacing(1),\n        fontWeight: '100',\n    },\n    input: {\n        margin: theme.spacing(1),\n    },\n    btnConfirm: {\n        backgroundColor: '#ff9900',\n        color: '#ffffff',\n        '&:hover':{\n            background: alpha('#483D8B',0.25),\n            color: alpha('#000000',0.90)\n        },\n        boxShadow: '0px 5px 5px gray',\n\n    },\n    confirm: {\n        margin: theme.spacing(0,1,1,1),\n\n    },\n}));\n\n const InputCard=( {setOpen, listId, type} )=>{\n    const classes = useStyle();\n    const {addMoreCard, addMoreList} = useContext(storeApi);\n    const [title,setTitle] = useState('');\n    const handleOnChange = (e) => {\n        setTitle(e.target.value);\n    }\n    const handleBtnConfirm =()=>{\n        if (type==='card') {    \n        addMoreCard(title, listId);\n        setTitle('');\n        setOpen(false);\n        } else {\n           addMoreList(title) ;\n        }\n    };\n    return(\n         <div className={classes.contenedor}> \n            <div className={classes.card}>\n                <Paper className={classes.card}>\n                    <InputBase \n                    onChange={handleOnChange}\n                    multiline\n                    // onBlur={()=> setOpen(false)}\n                    fullWith\n                    inputProps={{\n                        className: classes.input,\n                    }}\n                    value={title}\n                    placeholder={\n                        type === 'card'\n                            ? 'Añade una tarea..'\n                            : 'Añade una lista de tareas...'\n                    } \n                    />\n                </Paper>\n            </div>\n            <div className={classes.confirm}>\n                <Button className={classes.btnConfirm} onClick={handleBtnConfirm}>\n                    {type === 'card' ? 'Añadir Tarea' : 'Añadir Lista' }\n                </Button>\n                <IconButton onClick={()=> setOpen(false)}>\n                    <ClearIcon />\n                </IconButton>\n            </div>\n         </div>\n     )\n }\n\n export default InputCard","import React, { useState } from 'react';\nimport {Paper, Typography, Collapse} from '@material-ui/core';\nimport {makeStyles, alpha} from '@material-ui/core/styles';\nimport InputCard from './InputCard';\n\n\nconst useStyle = makeStyles((theme)=>({\n    root: {\n        width: '300px',\n        marginTop: theme.spacing(1),\n    },\n    addCard: {\n        padding: theme.spacing(1,1,1,2),\n        margin: theme.spacing(0,1,1,1),\n        background: 'rgba(0,0,0,0)',\n        \"&:hover\":{\n            backgroundColor: alpha('#000',0.25),\n        },\n    },\n}));\n\nconst InputContainer = ({listId, type})=>{\n    const classes = useStyle();\n    const [open, setOpen] = useState(false);\n    return (\n        <div className={classes.root}>\n            <Collapse in={open}>\n                <InputCard setOpen={setOpen} listId={listId} type={type} /> \n            </Collapse>\n            <Collapse in={!open}>\n                <Paper \n                    className={classes.addCard}\n                    elevation={0}\n                    onClick={()=>setOpen(!open)}\n                    >\n                    <Typography>\n                        {type==='card'?'+ Añade una tarea':'+ Añade otra lista'}\n                    </Typography>\n                </Paper>\n            </Collapse>\n\n        </div>\n    )\n}\n\nexport default InputContainer;","import React from 'react';\nimport {CssBaseline, Paper} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core';\nimport Title from './Title';\nimport Card from './Card/Card';\nimport InputContainer from '../Input/InputContainer'\nimport { Droppable } from 'react-beautiful-dnd';\nimport { Draggable } from 'react-beautiful-dnd';\n\n\nconst useStyle = makeStyles((theme)=>({\n    root: {\n        minWidth: '100px',\n        backgroundColor: '#d7e7e7',\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nconst List = ({list, index}) => {\n    const classes = useStyle();\n    return (\n        <Draggable draggableId={list.id} index={index}>\n        {(provided)=>(\n           <div {...provided.draggableProps} ref={provided.innerRef}> \n            <Paper className={classes.root} {...provided.dragHandleProps}>\n                <CssBaseline />\n                <Title title={list.title} listId={list.id} />\n                <Droppable droppableId={list.id}>\n                    {(provided)=>(\n                        <div \n                        ref={provided.innerRef}\n                        {...provided.droppableProps}\n                        >\n                            {list.cards.map((card, index)=>(\n                                <Card key={card.id} card={card} index={index} />\n                            ))}\n                            {provided.placeholder}\n                        </div>\n                 )}\n                </Droppable>\n                <InputContainer  listId={list.id} type='card'/>\n            </Paper>\n        </div> \n        )}\n        \n        </Draggable>\n    )\n};\n\nexport default List;","const cards = [\n    {\n        id: 'card-1',\n        title: 'estudiar código',\n    },\n    {\n        id: 'card-2',\n        title: 'tocar la guitarra',\n    },\n    {\n        id: 'card-3',\n        title: 'limpieza del hogar',\n    },\n];\n\nconst data = {\n    lists: {\n        'list-1': {\n            id:'list-1',\n            title: 'Tareas Pendientes',\n            cards,\n            },\n        'list-2': {\n            id:'list-2',\n            title: 'Tareas en curso',\n            cards: [],\n            },\n    },\n    listIds: ['list-1', 'list-2'],\n};\n\nexport default data;","import './App.css';\nimport React, { useState } from 'react';\nimport {v4 as uuid} from 'uuid';\nimport List from './components/List/List';\nimport store from './store/store';\nimport StoreApi from './store/storeApi';\nimport InputContainer from './components/Input/InputContainer';\nimport {makeStyles} from '@material-ui/core/styles';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\n\n\nconst useStyle = makeStyles((theme) =>({\n  root: {\n    display: 'flex',\n    minHeight:'100vh',\n    background:'#ecf4f4',\n    width: '100%',\n    overFlowY: 'auto',\n  }\n} ));\n\nfunction App() {\n  const [data, setData] = useState(store);\n  const classes = useStyle();\n  const addMoreCard = (title, listId) => {\n    const newCardId = uuid();\n    const newCard = {\n      id: newCardId,\n      title,\n    };\n\n    const list = data.lists[listId];\n    list.cards = [...list.cards,newCard];\n\n    const NewState = {\n      ...data,\n      lists: {\n        ...data.lists,\n        [listId]: list,\n      },\n    };\n    setData(NewState);\n  };\n\nconst addMoreList = (title) => {\n    const newListId = uuid();\n    const newList = {\n      id: newListId,\n      title,\n      cards: [],\n    };\n    const newState = {\n      listIds: [...data.listIds,newListId],\n      lists:{\n        ...data.lists,\n        [newListId]:newList\n      }\n    }\n    setData(newState);\n}\n\n  const updateListTitle = (title,listId)=>{\n    const list = data.lists[listId];\n    list.title = title;\n\n    const newState = {\n      ...data,\n      lists: {\n        ...data.lists,\n        [listId]: list,\n      },\n    };\n    setData(newState);\n  }\n\n\n  const onDragEnd = (result) => {\n    const {destination, source, draggableId, type } = result;\n    console.log('desnation', destination, 'source',source, draggableId);\n\n    if (!destination) {\n      return;\n    }\n    if (type === 'list'){\n      const newListIds = data.listIds;\n      newListIds.splice(source.index,1);\n      newListIds.splice(destination.index, 0, draggableId);\n      return;\n    }\n    const sourceList = data.lists[source.droppableId];\n    const destinationList = data.lists[destination.droppableId];\n    const draggingCard = sourceList.cards.filter(\n      (card) => card.id === draggableId\n    )[0];\n\n    if (source.droppableId === destination.droppableId){\n      sourceList.cards.splice(source.index,1);\n      destinationList.cards.splice(destination.index,0,draggingCard);\n      const newState = {\n        ...data,\n        lists: {\n          ...data.lists,\n          [sourceList.id]: destinationList,\n        },\n      };\n      setData(newState);\n    } else {\n      sourceList.cards.splice(source.index,1);\n      destinationList.cards.splice(destination.index, 0, draggingCard);\n\n      const newState = {\n        ...data,\n        lists:{\n          ...data.lists,\n          [sourceList.id]: sourceList,\n          [destinationList.id]: destinationList,\n        },\n      };\n      setData(newState);\n    }\n\n\n  }\n\n  return (\n    <StoreApi.Provider value={{ addMoreCard, addMoreList, updateListTitle, }}>\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId='app' type='list' direction='horizontal'>\n            {(provided)=>(\n              <div\n              className={classes.root}\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n              >\n            {data.listIds.map((listId, index)=> {\n              const list = data.lists[listId];\n              return <List list={list} key={listId} index={index} />;\n            })}\n            <InputContainer type='list' />\n            {provided.placeholder}\n          </div>\n            )}\n        \n          </Droppable>\n        </DragDropContext>\n    </StoreApi.Provider>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}